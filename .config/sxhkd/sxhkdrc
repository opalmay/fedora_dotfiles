# make sxhkd reload its configuration files:
super + Escape
  pkill -USR1 -x sxhkd; notify-send 'sxhkd' 'Reloaded config'

# BSPWM HOTKEYS

# quit/restart bspwm
super + shift + r
	bspc wm -r
super + shift + p
  rm /tmp/bspwm-startup.lock && bspc quit

# close and kill
super + q
	bspc node -c

# alternate between the tiled and monocle layout
super + m
  bspc desktop -l next
  # windows=$(wmctrl -l|awk '\{$3=""; $2=""; $1=""; print $0\}'); \
  # while IFS= read -r window; do; \
  # transset-df -n $window 0; \
  # done; <<< "$windows" \

# mirror layout
super + shift + m
	bspc node @/ -R 180

# move focused window to preselected area
#	bspc node -n 'last.!automatic.local'

# set tall layout
super + 0
  bsp-layout once tall

super + t
  bsp-layout set tiled
super + y
  bsp-layout set grid

# send the newest marked node to the newest preselected node
#super + y
#	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest node
super + g
  bspwm_move_to_biggest_or_preselection
	# bspc node -s biggest


# STATE/FLAGS

# toggle fullscreen
super + f
	bspc node -t \~fullscreen

super + shift +f
  for node_i in $(bspc query -N -n '.!focused.window' -d focused);  \
	do \
	bspc node $node_i -g hidden; \
	done

super + e
  bspc node focused -t tiled

# toggle floating and show on all desktops
super + {_,shift + } s
	if [ -z "$(bspc query -N -n focused.floating)" ]; then \
		bspc node focused -t floating; \
	else \
		bspc node focused -t tiled; \
	fi; \ 
	{_,bspc node -g sticky}

# set the node flags
super + ctrl + {m,b,y,z}
	bspc node -g {marked,locked,sticky,private}


# FOCUS/SWAP

# focus the node in the given direction
#super + {_,shift + }{h,j,k,l}
#	bspc node -{f,s} {west,south,north,east}
super + {h,j,k,l}
  m='.local.!hidden.window'; \
	bspwm_focus_direction {west$m next$m,south$m prev$m,north$m next$m,east$m prev$m}
# super + {h,j,k,l}
#         bspc node -f {west,south,north,east}
super + shift + {h,j,k,l}
  bspwm_smart_move {west,south,north,east}
   # dir={west,south,north,east}; \
	# bspc node -s "$dir.local" --follow \
 #    || bspc node -m "$dir" --follow
# super + shift + {h,j,k,l}
# 	~/.config/bspwm/bspwm_smart_move {west,south,north,east}
# rotate tree
super + shift + {d,a}
	bspc node @/ -C {forward,backward}
# change tiling direction for focused window relative to parent
super + backslash
	bspc node @parent -R 90
# make all same size
super + equal
  bspc node @/ -B

# focus the node for the given path jump
#super + {p,b,comma,period}
#	bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
#super + {_,shift + }n
#	bspc node -f {next,prev}.local.!hidden.window
alt + Tab
	bspc node -f next.local.!hidden.window && transset-df -a 100
Menu
	bspc node -f next.local.!hidden.window
super + Tab
	bspc node -f next.local.!hidden.window

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local
# move window to next desktop
super + shift + bracket{left,right}
	bspc node -d {prev,next} --follow

# focus next monitor
super + {semicolon,apostrophe}
  bspc monitor -f {prev,next}
# # move desktop between monitors
# super + shift + {semicolon,apostrophe}
#     D=$(bspc query -D -d); \
#     M=$(bspc query -M -m {prev,next}); \
#     bspc desktop -m {prev,next}; \
#     bspc query -m {prev,next} -T | jshon -e desktops -a -e name -u | sort -n | xargs bspc monitor $M -o; \
#     bspc desktop -f $D

# focus the last node/desktop
#super + {grave,Tab}
#	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
#super + {o,i}
#	bspc wm -h off; \
#	bspc 'node {older,newer} -f; \
#	bspc wm -h on

# focus or send to the given desktop
super + {_,ctrl + }{1-9,0}
	bspc {desktop -f,node -d} focused:'^{1-9,10}'

# send to desktop and follow
super + shift + {1-9,0}
	bspc node -d focused:'^{1-9,10}' --follow


# PRESELECT

# preselect the direction
super + p ; super + {h,j,k,l,semicolon}
	bspc node -p {west,south,north,east,cancel}

super + alt + {h,j,k,l}
	bspc node -p {west,south,north,east,cancel}
# preselect the ratio
super + alt + {1-9}
	bspc node -o 0.{1-9}
super + {u,n}
  bspc node -p {east,south}



# cancel the preselection for the focused node
# super + alt + space
# 	bspc node -p cancel

# cancel the preselection for the focused desktop
super + alt + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel


# MOVE/RESIZE

# expand a window by moving one of its side outward
#ctrl + alt + {h,j,k,l}
#	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# expand/contract a window 
# super + ctrl + {h,j,k,l}
# 	STEP=30; \
# 	bspc node -z {left -$STEP 0 || bspc node -z right -$STEP 0, \
#                 bottom 0 $STEP || bspc node -z top 0 $STEP,\
#                 top 0 -$STEP || bspc node -z bottom 0 -$STEP,\
#                 right $STEP 0 || bspc node -z left $STEP 0}
#
super + ctrl + {h,j,k,l}
  bspwm_resize {left,down,up,right} 30

# contract a window by moving one of its side inward
#ctrl + alt + shift + {h,j,k,l}
#	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}


# APPLICATION KEYBINDINGS

# terminal emulator
super + Return
	kitty

# browser
super + b
  brave-browser

# pcmanfm
super + d
	pcmanfm

# ranger
super + r
  alacritty -e ranger

# htop
ctrl + alt + Delete
	alacritty -e htop


# SCRIPTS

# next wallpaper
super + n
	nitrogen --set-zoom-fill --random ~/Documents/wallpapers/ --save

# kill an app
super + ctrl + x
	xkill
super + shift + p
	~/.bin/picom-toggle.sh

# app launcher (mapped to super using ksuperkey)
alt + F1
  rofi -modi drun -show drun -show-icons

# switch display mode
# super + p
# 	rofi -show fb -modi "fb:~/.bin/configure_displays" -location 2

# connect to a vpn
# super + shift + v
#   rofi -show fb -modi "fb:~/.bin/vpnconnectrofi" -location 2
# take a screenshot
Print
  maim -s --format png /dev/stdout | xclip -selection clipboard -t image/png -i; \
  notify-send -u "low" -t 2000 "Copied" "Screenshot copied to clipboard!"
super + Print
  maim -s ~/Pictures/Screenshots/$(date +%s).png; \
  notify-send -u "low" -t 2000 "Saved" "Screenshot saved!"

super + shift + Print
  flameshot gui

super + w
	i=$(bspc query -N -n "focused.floating");\
	if [ -n "$i" ];then \
		xprop -id $i -f _SCRATCH 32ii -set _SCRATCH $(date +%s,%N);\
		xdotool windowunmap $i;\
	else;\
		i=$(for w in $(xwininfo -root -children | grep -e "^\s*0x[0-9a-f]\+" -o);do \
			t=$(xprop -id $w _SCRATCH | grep ' = \(.*\)');\
			if [ -n "$t" ];then \
				echo $t $w;\
			fi;\
		done|sort -n|head -n1|cut -d" " -f 5);\
		if [ -n "$i" ];then \
			xprop -id $i -remove _SCRATCH;\
			bspc rule -a \* state=floating center=on --one-shot;\
			xdotool windowmap $i;\
			bspc node -f $i;\
		fi;\
	fi
super + shift + w
	id=$(bspc query -N -n "focused");\
	if [ -n "$id" ];then \
		xprop -id $id -f _SCRATCH 32ii -set _SCRATCH $(date +%s,%N);\
		bspc node -t "floating";\
		xdotool windowunmap $id;\
	fi

# volume keys
#{XF86AudioRaiseVolume, F8}
#  pactl set-sink-volume 4 +5%
#{XF86AudioLowerVolume, F7}
#  pactl set-sink-volume 4 -5%
#{XF86AudioMute, F6}
#  pactl set-sink-mute 4 toggle

XF86AudioRaiseVolume
  pactl set-sink-volume 0 +5%
XF86AudioLowerVolume
  pactl set-sink-volume 0 -5%
XF86AudioMute
  pactl set-sink-mute 0 toggle

XF86MonBrightness{Up,Down}
  brightnessctl s 1920{+,-}

# Changing the Volume
# XF86Audio{Raise,Lower}Volume
# pulsemixer --change-volume {+,-}10
# XF86AudioMute
# pulsemixer --toggle-mute
# show powermenu
# super + shift + e
#   ~/.bin/powermenu

# resart pulseaudio
# super + shift + o
#   pulseaudio -k && pulseaudio --start

# lock screen
super + shift + equal
  betterlockscreen -l dim

super + v
  roficlip && xclip -o --selection primary 

# super + space
#   xkb-switch -n

# alt + shift
#   xkb-switch -n
